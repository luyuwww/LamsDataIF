<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd">

    <context:component-scan base-package="com.bwzk"/>
    <bean id="propertyPlaceholderConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <!-- 这里支持多种寻址方式：classpath和file -->
                <value>classpath*:config.properties</value>
                <!-- 推荐使用file的方式引入，这样可以将配置和代码分离
                  <value>file:/opt/demo/config/demo-mq.properties</value>
                   -->
            </list>
        </property>
    </bean>

    <import resource="classpath:META-INF/cxf/cxf.xml"/>
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>

    <bean id="dataSource4DataIF" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="name" value="${druid.datasource.name}"/>
        <property name="username" value="${druid.datasource.username}"/>
        <property name="url" value="${druid.datasource.url}"/>
        <property name="password" value="${druid.datasource.password}"/>
        <property name="filters" value="${druid.datasource.filters}"/>
        <property name="maxActive" value="${druid.datasource.maxActive}"/>
        <property name="initialSize" value="${druid.datasource.initialSize}"/>
        <property name="maxWait" value="${druid.datasource.maxWait}"/>
        <property name="minIdle" value="${druid.datasource.minIdle}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${druid.datasource.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${druid.datasource.minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="${druid.datasource.validationQuery}"/>
        <property name="testWhileIdle" value="${druid.datasource.testWhileIdle}"/>
        <property name="testOnBorrow" value="${druid.datasource.testOnBorrow}"/>
        <property name="testOnReturn" value="${druid.datasource.testOnReturn}"/>
        <property name="poolPreparedStatements" value="${druid.datasource.poolPreparedStatements}"/>
    </bean>

    <bean id="dataSource4OA" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="name" value="${druid.datasource.oa.name}"/>
        <property name="username" value="${druid.datasource.oa.username}"/>
        <property name="url" value="${druid.datasource.oa.url}"/>
        <property name="password" value="${druid.datasource.oa.password}"/>
        <property name="filters" value="${druid.datasource.filters}"/>
        <property name="maxActive" value="${druid.datasource.maxActive}"/>
        <property name="initialSize" value="${druid.datasource.initialSize}"/>
        <property name="maxWait" value="${druid.datasource.maxWait}"/>
        <property name="minIdle" value="${druid.datasource.minIdle}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${druid.datasource.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${druid.datasource.minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="${druid.datasource.validationQuery}"/>
        <property name="testWhileIdle" value="${druid.datasource.testWhileIdle}"/>
        <property name="testOnBorrow" value="${druid.datasource.testOnBorrow}"/>
        <property name="testOnReturn" value="${druid.datasource.testOnReturn}"/>
        <property name="poolPreparedStatements" value="${druid.datasource.poolPreparedStatements}"/>
    </bean>

    <bean id="sqlSessionFactory4DA" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource4DataIF"/>
        <property name="mapperLocations" value="classpath:mybatis/da/*.xml"></property>
        <property name="plugins">
            <ref bean="paginationInterceptor" />
        </property>
    </bean>
    <bean id="sqlSessionFactory4OA" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource4OA"/>
        <property name="mapperLocations" value="classpath:mybatis/oa/*.xml"></property>
    </bean>
    <!-- 分页拦截器 dialect是方言 , "pageFilter"是需要方言的过滤字符串 只有方法带这个开头的才可以 -->
    <bean id="paginationInterceptor" class="com.bwzk.page.PaginationInterceptor">
        <property name="dialect" value="oracle" />
        <property name="pageFilter" value="listPage" />
    </bean>
    <bean id="mapperScannerConfigurer4DA" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.bwzk.dao.i.da"/>
        <property name="markerInterface" value="com.bwzk.dao.BaseDao4DA"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory4DA"/>
    </bean>
    <bean id="mapperScannerConfigurer4OA" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.bwzk.dao.i.oa"/>
        <property name="markerInterface" value="com.bwzk.dao.BaseDao4OA"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory4OA"/>
    </bean>

    <!-- jdbcTemplate -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource4DataIF"/>
    </bean>

    <!-- jdbcTemplate -->
    <bean id="jdbcTemplate4OA" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource4OA"/>
    </bean>

    <!-- dao -->
    <!-- service -->

    <!-- 事务配置 UNIS-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource4DataIF"/>
        <!--<qualifier value="thamsTX"/>-->
    </bean>
    <!--<tx:annotation-driven transaction-manager="txManager"/>-->

    <!-- 下面是显示定时相关配置
    <task:scheduled-tasks>
        <task:scheduled ref="userGropuServiceImp" method="ssss" cron="* * * * * *"/>
    </task:scheduled-tasks>
        注解实现定时器
        <task:annotation-driven/>
        void的方法上加@Scheduled(cron="0 * * * * *") 可实现定时
        @Scheduled(cron="0 * * * * *")  代表每分钟执行一次
        @Scheduled(cron="* * * * * *")  代表每秒钟执行一次
                         0 0 2 * * ?    每晚2点执行一次
        1 Seconds (0-59)
        2 Minutes (0-59)
        3 Hours (0-23)
        4 Day of month (1-31)
        5 Month (1-12 or JAN-DEC)
        6 Day of week (1-7 or SUN-SAT)
        7 Year (1970-2099)
        取值：可以是单个值，如6；
              也可以是个范围，如9-12；b
              也可以是个列表，如9,11,13
              也可以是任意取值，使用*
      每晚11点同步
    <task:scheduled-tasks>
        <task:scheduled ref="arcServcieImpl" method="initUserGroup" cron="0 0 23 * * ?"/>
    </task:scheduled-tasks>
     -->
    <task:scheduled-tasks>
        <!-- 同步OA数据给Lams -->
        <task:scheduled ref="arcServcieImpl" method="syncOaData" cron="${schedule.arcServcieImpl.syncOaData}"/>
        <!-- 电子文件自动归档 -->
<!--        <task:scheduled ref="arcServcieImpl" method="autoArchiveEfile" cron="${schedule.arcServcieImpl.autoArchiveEfile}"/>-->
    </task:scheduled-tasks>
</beans>